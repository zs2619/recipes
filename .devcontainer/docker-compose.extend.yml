version: '3'
services:
  recipes:
    network_mode: bridge
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    command: /bin/sh -c "while sleep 1000; do :; done"
  nats-server:
    image: nats:2.1
    container_name: nats-server
    network_mode: bridge
    ports:
      - 4222:4222
      - 8222:8222
    restart: always
  redis-node-1:
    container_name: redis-7001
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7001:7001
      - 17001:17001
    command: redis-server --port 7001 --cluster-enabled yes --cluster-announce-port
      7001 --cluster-announce-bus-port 17001 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
  redis-node-2:
    container_name: redis-7002
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7002:7002
      - 17002:17002
    command: redis-server --port 7002 --cluster-enabled yes --cluster-announce-port
      7002 --cluster-announce-bus-port 17002 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
    depends_on:
      - redis-node-1
  redis-node-3:
    container_name: redis-7003
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7003:7003
      - 17003:17003
    command: redis-server --port 7003 --cluster-enabled yes --cluster-announce-port
      7003 --cluster-announce-bus-port 17003 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
    depends_on:
      - redis-node-2
  redis-node-4:
    container_name: redis-7004
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7004:7004
      - 17004:17004
    command: redis-server --port 7004 --cluster-enabled yes --cluster-announce-port
      7004  --cluster-announce-bus-port 17004 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
    depends_on:
      - redis-node-3
  redis-node-5:
    container_name: redis-7005
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7005:7005
      - 17005:17005
    command: redis-server --port 7005 --cluster-enabled yes --cluster-announce-port
      7005 --cluster-announce-bus-port 17005 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
    depends_on:
      - redis-node-4
  redis-node-6:
    container_name: redis-7006
    network_mode: bridge
    image: redis:5.0
    restart: always
    ports:
      - 7006:7006
      - 17006:17006
    depends_on:
      - redis-node-5
    command: redis-server --port 7006 --cluster-enabled yes --cluster-announce-port
      7006 --cluster-announce-bus-port 17006 --cluster-announce-ip ${Host_IP}
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly
      yes
  redis-cli-server:
    image: redis:5.0
    container_name: redis-cli-server
    network_mode: bridge
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    command:
      [
        /bin/sh,
        -c,
        'echo "yes" | redis-cli --cluster create ${Host_IP}:7001
          ${Host_IP}:7002 ${Host_IP}:7003 ${Host_IP}:7004 ${Host_IP}:7005
          ${Host_IP}:7006 --cluster-replicas 1'
      ]
  mongodb-server:
    image: mongo:4.2.14
    container_name: mongodb-server
    network_mode: bridge
    restart: always
    volumes:
      - /data/mongodb:/data/db
    ports:
      - 27017:27017
    command: mongod
